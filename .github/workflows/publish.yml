name: Publish to NPM

on:
  push:
    tags:
      - "v*"

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org/"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Get git tag
        id: get_tag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Verify version match
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          GIT_TAG="${{ steps.get_tag.outputs.TAG }}"

          echo "Package version: $PACKAGE_VERSION"
          echo "Git tag: $GIT_TAG"

          if [ "$PACKAGE_VERSION" != "$GIT_TAG" ]; then
            echo "Error: Package version ($PACKAGE_VERSION) does not match git tag ($GIT_TAG)."
            exit 1
          fi

          echo "Package version matches git tag: $PACKAGE_VERSION"

      - name: Build
        run: pnpm run build

      - name: Publish to NPM
        run: pnpm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
