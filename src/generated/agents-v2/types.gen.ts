// This file is auto-generated by @hey-api/openapi-ts

export type ActivityPayloadUnionActionCompleted = {
    activityType: 'action_completed';
    data: ExecutionActivityActionCompletedPayload;
};

export type ActivityPayloadUnionActionFailed = {
    activityType: 'action_failed';
    data: ExecutionActivityActionFailedPayload;
};

export type ActivityPayloadUnionActionStarted = {
    activityType: 'action_started';
    data: ExecutionActivityActionStartedPayload;
};

export type ActivityPayloadUnionGeneric = {
    activityType: 'generic';
    data: ExecutionActivityGenericPayload;
};

export type ActivityPayloadUnionStatusChanged = {
    activityType: 'status_changed';
    data: ExecutionActivityStatusChangedPayload;
};

export type ActivityPayloadUnionStepCompleted = {
    activityType: 'step_completed';
    data: ExecutionActivityStepCompletedPayload;
};

export type ActivityPayloadUnionStepStarted = {
    activityType: 'step_started';
    data: ExecutionActivityStepStartedPayload;
};

export type ActivityPayloadUnionTerminal = {
    activityType: 'terminal';
    data: ExecutionTerminalPayload;
};

export type ActivityPayloadUnionTransitionedNode = {
    activityType: 'transitioned_node';
    data: ExecutionActivityTransitionedNodePayload;
};

export type ActivityPayloadUnionUserMessageReceived = {
    activityType: 'user_message_received';
    data: ExecutionActivityUserMessageReceivedPayload;
};

export type _Error = {
    code: number;
    message: string;
};

export type ExecutionActivity = {
    id: Uuid;
    payload: ExecutionActivityPayloadUnion;
    executionId: Uuid;
    timestamp: string;
};

export type ExecutionActivityActionCompletedPayload = {
    message: string;
};

export type ExecutionActivityActionFailedPayload = {
    message: string;
};

export type ExecutionActivityActionStartedPayload = {
    message: string;
};

export type ExecutionActivityGenericPayload = {
    message: string;
};

export type ExecutionActivityPayloadUnion = ({
    activityType: 'terminal';
} & ActivityPayloadUnionTerminal) | ({
    activityType: 'generic';
} & ActivityPayloadUnionGeneric) | ({
    activityType: 'step_started';
} & ActivityPayloadUnionStepStarted) | ({
    activityType: 'step_completed';
} & ActivityPayloadUnionStepCompleted) | ({
    activityType: 'transitioned_node';
} & ActivityPayloadUnionTransitionedNode) | ({
    activityType: 'status_changed';
} & ActivityPayloadUnionStatusChanged) | ({
    activityType: 'action_started';
} & ActivityPayloadUnionActionStarted) | ({
    activityType: 'action_completed';
} & ActivityPayloadUnionActionCompleted) | ({
    activityType: 'action_failed';
} & ActivityPayloadUnionActionFailed) | ({
    activityType: 'user_message_received';
} & ActivityPayloadUnionUserMessageReceived);

export type ExecutionActivityStatusChangedPayload = {
    status: ExecutionStatus;
};

export type ExecutionActivityStepCompletedPayload = {
    stepNumber: number;
};

export type ExecutionActivityStepStartedPayload = {
    stepNumber: number;
};

export type ExecutionActivityTransitionedNodePayload = {
    newNodeUUID: Uuid;
    newNodeName: string;
};

export type ExecutionActivityUserMessageReceivedPayload = {
    message: string;
    userUUID: Uuid;
};

export type ExecutionStatus = 'starting' | 'running' | 'paused' | 'awaiting_confirmation' | 'completed' | 'cancelled' | 'failed' | 'paused_by_agent';

export type ExecutionTerminalPayload = {
    reason: 'unsubscribe' | 'complete' | 'error';
    message?: string;
};

export type ExecutionUserMessagesAddTextBody = {
    message: string;
};

export type FilePart = Blob | File;

export type Versions = 'frontend' | 'v2';

export type Uuid = string;

export type ActivitiesGetData = {
    body?: never;
    path: {
        /**
         * The unique identifier of the execution
         */
        executionId: Uuid;
    };
    query?: {
        /**
         * Sort order for activities by timestamp
         */
        order?: 'asc' | 'desc';
        /**
         * Maximum number of activities to return
         */
        limit?: number;
    };
    url: '/executions/{executionId}/activities';
};

export type ActivitiesGetErrors = {
    /**
     * An unexpected error response.
     */
    default: _Error;
};

export type ActivitiesGetError = ActivitiesGetErrors[keyof ActivitiesGetErrors];

export type ActivitiesGetResponses = {
    /**
     * The request has succeeded.
     */
    200: Array<ExecutionActivity>;
};

export type ActivitiesGetResponse = ActivitiesGetResponses[keyof ActivitiesGetResponses];

export type UserMessagesAddData = {
    /**
     * The message content to send
     */
    body: ExecutionUserMessagesAddTextBody;
    path: {
        /**
         * The unique identifier of the execution
         */
        executionId: Uuid;
    };
    query?: never;
    url: '/executions/{executionId}/user-messages';
};

export type UserMessagesAddErrors = {
    /**
     * An unexpected error response.
     */
    default: _Error;
};

export type UserMessagesAddError = UserMessagesAddErrors[keyof UserMessagesAddErrors];

export type UserMessagesAddResponses = {
    /**
     * The request has succeeded and a new resource has been created as a result.
     */
    201: 'User message added.';
};

export type UserMessagesAddResponse = UserMessagesAddResponses[keyof UserMessagesAddResponses];

export type ClientOptions = {
    baseUrl: 'https://odyssey.asteroid.ai/agents/{version}' | (string & {});
};